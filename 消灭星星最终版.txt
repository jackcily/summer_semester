消灭星星
游戏规则：
每局（升级 在规定的达到一定的分数即可通关 直至通关或者死亡
当没有能消除的方框（消除完成 或者 死局）时，判断进入下一关或是死亡
游戏难度：
一共有六局 前三局有三种颜色，后三局有四种颜色
每种消灭星星的方式取得的分数不同，星星个数越高，消除分数越高 类似幂函数的增长
等级越高  所要达到的分数越高 但是消灭星星的分数也会相应提升（以此降低游戏难度并且营造一种进入高等级的感觉）
数据结构：
一个结构体 三个数据 两个存坐标。一个存状态
一个栈 用来判断星星是否需要消除  结构体的作用是用来判断是否可以消除
一个二维数组，用来存储相应位置星星的状态（星星的颜色或者是空格）
游戏设置：
首先随机生成一个二维数组的迷宫，代表不同的颜色
10*10的迷宫
四种颜色 红  绿   蓝  黄
鼠标双击（单击选中 再单击消除）（单击事件表示选中某一个区域）（出来一种选中的特效） ，双击表示开始进行消除判断然后要判断处于哪一个点上 然后执行判断操作 进行压栈  弹出   删除   删除的星星块的坐标平移操作 进行完一轮删除就判断游戏是否已经结束 判断分数是否达到要求 进入下一关或者死亡或者通关 进行重玩或者退出游戏
（进阶 星星被消灭的时候要有特效）
计算分数要单独使用一个函数 
（最后不能再消除的时候可以进行剩下的都爆掉，然后加分）（但是剩下的越多加的分数越少）
分数像素都要用宏进行定义 后期如果觉得游戏的分数设置不合理可以进行修改
（后期完善  星星我想用位图来表示，而不用像素块，至于怎么把位图排列好，可以参考华容道的图片摆放）
函数设置
函数随机生成二维数组，根据传入的颜色数目随机生成
消除函数 根据传入的点开始进行消除判断
判断是否死局函数，没有参数 ，只需要判断二维数组中是否还有能消除的点
判断是否通过该关函数  检查等级和分数是否匹配
增加分数函数   每次消除完成后进行加分


C语言
首先随机生成二维数组
打印
用户输入点
消除判断
判断是否进入下一关
判断是否死局

API版
创建二维数组
绘制窗口（只需要二维数组）
用户输入点
进行消除判断
判断是否进入下一关
判断是否死局


