消灭星星
需要的数据
星星的坐标   二维数组
星星的坐标里要存储颜色,存储坐标 就是一个结构体，里面有三个参数，两个坐标轴，一个星星状态 可能是星星的颜色，也可能是墙
判断所点的点周围是否能消掉   栈

消灭星星的功能
星星不会自动增加了
剩余的星星会自动拼凑在一起
一次消灭的星星个数不一样  则得到的分数也不一样
不同等级 星星的颜色也不一样多 等级越高难度越大  
每次进行工作后都要检查游戏是否结束   即是生是死
游戏规则：
每局要求达到要求的分数即可通关  直到没有能消除的了  进入下一关
死亡或者进入下一关
旗子不会发生移动（以后完善的时候也可以让旗子发生移动，然后进行交换就可以进行消除，只不过两颗棋子都进行判断而已，做成开心消消乐的样子）
鼠标点中一颗棋子，进行判断是否能进行消除，如果能就消除，否则不消除（后续完善 如果中间存在空行，还要进行局部平移，拼接到一起）

消灭星星
游戏规则
每局（升级 在规定的达到一定的分数即可通关 直至通关或者死亡
当没有能消除的方框（消除完成 或者 死局）时，判断进入下一关或是死亡
游戏难度：
一共有六局 前三局有三种颜色，后三局有四种颜色
每种消灭星星的方式取得的分数不同，星星个数越高，消除分数越高 类似幂函数的增长
等级越高  所要达到的分数越高 但是消灭星星的分数也会相应提升（以此降低游戏难度并且营造一种进入高等级的感觉）
数据结构
一个结构体 三个数据 两个存坐标。一个存状态
一个栈 用来判断星星是否需要消除  结构体的作用是用来判断是否可以消除
一个二维数组，用来存储相应位置星星的状态
游戏设置：
首先随机生成一个二维数组的迷宫，代表不同的颜色
10*10的迷宫
四种颜色 红  绿   蓝  黄
鼠标双击（单击选中 再单击消除太难啦   后面在进行完善吧）（单击事件表示选中某一个区域）（出来一种选中的特效） ，双击表示开始进行消除判断然后要判断处于哪一个点上 然后执行判断操作 进行压栈  弹出   删除   坐标平移操作 进行完一轮删除就判断游戏是否已经结束 判断分数是否达到要求 或者死亡 进行重玩或者退出游戏
进阶 星星被消灭的时候要有特效
计算分数要单独使用一个函数 
最后不能再消除的时候可以进行剩下的都爆掉，然后加分（但是剩下的越多加的分数越少）
记得分数像素都要用宏进行定义 后期如果觉得游戏的分数设置不合理可以进行修改
星星我想用位图来表示，而不用像素块，至于怎么把位图排列好，可以参考华容道的图片摆放

设计的数据结构
需要的数据
数据变化过程 操作方法
接口函数
